# -*- coding: utf-8 -*-
"""14.3:K Means Clustering: Customer Segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19RSvdWGQv7E8VVHGtM7k0ahQaTHcJzMw
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('income.csv')
df.head()

plt.scatter(df['Age'],df['Income($)'])
plt.xlabel('Age')
plt.ylabel('Income($)')
plt.show()

from sklearn.cluster import KMeans

km = KMeans(n_clusters=3)
km.fit(df[['Age','Income($)']])
y_predicted = km.fit_predict(df[['Age','Income($)']])
y_predicted
km.labels_

df['cluster'] = km.labels_
df['predicted'] = y_predicted
df.head()

sns.scatterplot(x='Age',y='Income($)',data=df,hue='cluster',palette='rainbow')

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()

df_scaled = pd.DataFrame(columns=['Age','Income($)'])
df_scaled[['Age','Income($)']] = scaler.fit_transform(df[['Age','Income($)']])
df_scaled.head()

km = KMeans(n_clusters=3)
km.fit(df_scaled[['Age','Income($)']])
y_predicted = km.fit_predict(df_scaled[['Age','Income($)']])
df_scaled['cluster'] = km.labels_
df_scaled['predicted'] = y_predicted
df_scaled.head()

centroids = km.cluster_centers_
centroids

sns.scatterplot(x='Age',y='Income($)',data=df_scaled,hue='cluster',palette='rainbow')
sns.scatterplot(x=centroids[:, 0],y=centroids[:, 1],color='black',marker='X')

sse = []

k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df_scaled[['Age','Income($)']])
    sse.append(km.inertia_)

sse

plt.xlabel('k')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse)
plt.show()

