# -*- coding: utf-8 -*-
"""10.17:XGBoost_Synthetic_Data_Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19LfHiXrxP3LqGvzDb7yz4sO_TDnWlA3-
"""

from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split

from sklearn.neighbors import KNeighborsClassifier
import numpy as np

X, y = make_classification(
    n_samples=10000,
    n_features=10,
    n_informative=8,
    n_redundant=2,
    n_repeated=0,
    n_classes=3,
    random_state=42,
)

X.shape

X[:2]

y[:2]

"""### Model Training using Logistic Regression"""

X_train, X_test, y_train, y_test = train_test_split(    X, y, test_size=0.2, random_state=1)

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report
import time

start = time.time()
model_lm = LogisticRegression()
model_lm.fit(X_train, y_train)
end = time.time()

y_pred = model_lm.predict(X_test)
print(classification_report(y_test, y_pred))
print('time taken:', end - start)

"""### Model Training using XGBoost"""

from xgboost import XGBClassifier

start = time.time()
model_xgb = XGBClassifier()
model_xgb.fit(X_train, y_train)
end = time.time()

y_pred = model_xgb.predict(X_test)
print(classification_report(y_test, y_pred))
print('time taken:', end - start)

