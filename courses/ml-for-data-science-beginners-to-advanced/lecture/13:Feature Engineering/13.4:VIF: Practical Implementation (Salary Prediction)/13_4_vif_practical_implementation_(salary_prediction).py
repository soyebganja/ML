# -*- coding: utf-8 -*-
"""13.4:VIF: Practical Implementation (Salary Prediction).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/179bir5orz5PmOmAa6Vr_P3rVp2BYjTsP
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

df = pd.read_csv('salaries.csv')
df.head()

df.shape

X = df.drop('Salary', axis=1)
y = df['Salary']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)

model_full = LinearRegression()
model_full.fit(X_train, y_train)
model_full.score(X_test, y_test)

model_full.intercept_

model_full.coef_

y_test[:1]

X_test[:1]

model_full.predict(X_test[:1])

29*model_full.coef_[0]+2*model_full.coef_[1]+48*model_full.coef_[2]+2*model_full.coef_[3]+model_full.intercept_

sns.scatterplot(df, x="Age", y="Salary")

cm = df.corr()

sns.heatmap(cm, annot=True)
plt.show()

from statsmodels.stats.outliers_influence import variance_inflation_factor

def calculate_vif(X):
    vif_df = pd.DataFrame()
    vif_df["variables"] = X.columns
    variables = list(range(X.shape[1]))
    vif_df["vif"] = [variance_inflation_factor(X.iloc[:, variables].values, ix) for ix in range(X.iloc[:, variables].shape[1])]
    return vif_df

X = df.drop('Salary', axis=1)
calculate_vif(X)

calculate_vif(X.drop('Age', axis=1))

X_train, X_test, y_train, y_test = train_test_split(X.drop("Age", axis=1), y, test_size=0.3, random_state=101)

model_reduced = LinearRegression()
model_reduced.fit(X_train, y_train)
model_reduced.score(X_test, y_test)

X_test[:1]

model_reduced.coef_

